CREATE TABLE MEAL (
  NAME VARCHAR(255),
  PRICE DOUBLE,
  CALORIES INT
);

CREATE TABLE INGREDIENT (
  NAME VARCHAR(255),
  CONTAINS_LACTOSE BOOLEAN,
  VEGETARIAN BOOLEAN,
  VEGAN BOOLEAN,
  GLUTEN_FREE BOOLEAN
);

INSERT INTO INGREDIENT (NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES ('Eggs', false, true, false, true);

INSERT INTO INGREDIENT (NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES ('Bread', false, true, true, false);

INSERT INTO INGREDIENT (NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES ('Beef Patty', false, false, false, true);

INSERT INTO INGREDIENT (NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES ('Lettuce', false, true, true, true);

INSERT INTO INGREDIENT (NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES ('Yoghurt', true, true, false, true);

INSERT INTO MEAL(NAME, PRICE, CALORIES)
VALUES ('Spaghetti Bolognese', 12.99, 600),
('Grilled Chicken Sandwich', 8.99, 400),
('Pesto Pasta', 10.99, 550),
('Steak and Mash', 19.99, 800),
('Sushi Platter', 15.99, 700);

CREATE TABLE MEAL_ORDER (
  TIME_MEAL_ORDERED TIMESTAMP DEFAULT NOW(),
  MEAL_NAME VARCHAR(255)
);

    INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
    VALUES (NOW(), 'Spaghetti Bolognese');

    INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
    VALUES (DATE_ADD(NOW(), INTERVAL 1 HOUR), 'Grilled Chicken Sandwich');

    INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
    VALUES (DATE_ADD(NOW(), INTERVAL 2 HOUR), 'Pesto Pasta');

    INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
    VALUES (DATE_ADD(NOW(), INTERVAL 3 HOUR), 'Pesto Pasta');

    INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
    VALUES (DATE_ADD(NOW(), INTERVAL 4 HOUR), 'Grilled Chicken Sandwich');

    INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
    VALUES (DATE_ADD(NOW(), INTERVAL 5 HOUR), 'Pesto Pasta');

    INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
    VALUES (DATE_ADD(NOW(), INTERVAL 6 HOUR), 'Spaghetti Bolognese');

    INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
    VALUES (DATE_ADD(NOW(), INTERVAL 7 HOUR), 'Pesta Pasta');

    INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
    VALUES (DATE_ADD(NOW(), INTERVAL 8 HOUR), 'Pesto Pasta');

    INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
    VALUES (DATE_ADD(NOW(), INTERVAL 9 HOUR), 'Spaghetti Bolognese');

CREATE VIEW MEAL_ORDER_WITH_DETAILS AS
    SELECT MO.*, M.PRICE, M.CALORIES FROM MEAL_ORDER MO, MEAL M
    WHERE MO.MEAL_NAME = M.NAME;


INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
VALUES (NOW(), 'Spaghetti Bolognese'),
(DATE_ADD(NOW(), INTERVAL 1 HOUR), 'Grilled Chicken Sandwich'),
(DATE_ADD(NOW(), INTERVAL 2 HOUR), 'Pesto Pasta'), (DATE_ADD(NOW(), INTERVAL 3 HOUR), 'Steak and Mash'), (DATE_ADD(NOW(), INTERVAL 4 HOUR), 'Spaghetti Bolognese'),
(DATE_ADD(NOW(), INTERVAL 5 HOUR), 'Sushi Platter'), (DATE_ADD(NOW(), INTERVAL 6 HOUR), 'Pesto Pasta'), (DATE_ADD(NOW(), INTERVAL 7 HOUR), 'Spaghetti Bolognese'), (DATE_ADD(NOW(), INTERVAL 8 HOUR), 'Steak and Mash'), (DATE_ADD(NOW(), INTERVAL 9 HOUR), 'Grilled Chicken Sandwich'),
(DATE_ADD(NOW(), INTERVAL 10 HOUR), 'Spaghetti Bolognese'), (DATE_ADD(NOW(), INTERVAL 11 HOUR), 'Pesto Pasta'), (DATE_ADD(NOW(), INTERVAL 12 HOUR), 'Sushi Platter'), (DATE_ADD(NOW(), INTERVAL 13 HOUR), 'Spaghetti Bolognese'), (DATE_ADD(NOW(), INTERVAL 14 HOUR), 'Steak and Mash'),
(DATE_ADD(NOW(), INTERVAL 15 HOUR), 'Grilled Chicken Sandwich'), (DATE_ADD(NOW(), INTERVAL 16 HOUR), 'Sushi Platter'), (DATE_ADD(NOW(), INTERVAL 17 HOUR), 'Steak and Mash'), (DATE_ADD(NOW(), INTERVAL 18 HOUR), 'Spaghetti Bolognese'), (DATE_ADD(NOW(), INTERVAL 19 HOUR), 'Grilled Chicken Sandwich'),
(DATE_ADD(NOW(), INTERVAL 20 HOUR), 'Pesto Pasta'), (DATE_ADD(NOW(), INTERVAL 21 HOUR), 'Sushi Platter'), (DATE_ADD(NOW(), INTERVAL 22 HOUR), 'Steak and Mash');

                                                ESERCIZIO


Using a SELECT statement with a GROUP BY clause and COUNT function, retrieve the number of orders for each meal.

        SELECT count(MEAL_NAME) FROM MEAL_ORDER_WITH_DETAILS
        group by MEAL_NAME;

Using a SELECT statement with a WHERE clause and SUM function, retrieve the total revenue for all meals that have a
      price greater than â‚¬15.

        SELECT MEAL_NAME,price,
        count(meal_name) as numero_portate,
        sum(price) as tot_conti
        FROM MEAL_ORDER_WITH_DETAILS
        where price>15;

Using a SELECT statement with a GROUP BY clause and COUNT function, retrieve the number of meals that have more than 500 calories.

                SELECT MEAL_NAME,
                count(meal_name) as numero_portate
                FROM MEAL_ORDER_WITH_DETAILS
                where calories>500
                group by meal_name;

Using a SELECT statement with a WHERE clause and SUM function, retrieve the total price for all meals that have a name
containing the letter 'S'.You can find items that start with the letter s with the following where clause
WHERE LOWER(NAME) LIKE '%s%';

               SELECT MEAL_NAME,
               sum(price) as total_price
               FROM MEAL_ORDER_WITH_DETAILS
                WHERE LOWER(meal_name) like '%s%'
               group by meal_name;


Using a SELECT statement with a WHERE clause, GROUP BY clause, and COUNT function, retrieve the number of orders for
each meal that were ordered before '202X-XX-XX 18:00:00' (Replace the Xs with your current date)

                SELECT MEAL_NAME,TIME_MEAL_ORDERED ,
                COUNT(*)
                FROM MEAL_ORDER_WITH_DETAILS
                 WHERE DATE_SUB(NOW(), INTERVAL 8 HOUR)  //NON CAPISCO PERCHE L'INTERVALLO NN CAMBIA
                 GROUP BY MEAL_NAME ;