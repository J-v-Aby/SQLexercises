
                        select * from ingredient i  ;
                        select * from meal m  ;

                        alter table meal add MEAL_ID INT primary key auto_increment;

                        alter  table ingredient add ingredient (meal_id) references MEAL( meal_id);

INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (1, 'Grilled Chicken', FALSE, FALSE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (1, 'Bread', FALSE, TRUE, FALSE, FALSE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (1, 'Lettuce', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (1, 'Tomato', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (1, 'Mayo', TRUE, TRUE, FALSE, TRUE);

INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Lentils', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Onion', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Garlic', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Ginger', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Cumin', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Turmeric', FALSE, TRUE, TRUE, TRUE);

INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Pasta', FALSE, TRUE, FALSE, FALSE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Pesto', TRUE, TRUE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Pine Nuts', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Basil', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Garlic', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Parmesan Cheese', TRUE, FALSE, FALSE, FALSE);

INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (4, 'Spaghetti', FALSE, TRUE, FALSE, FALSE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (4, 'Ground Beef', FALSE, FALSE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (4, 'Onion', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (4, 'Garlic', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (4, 'Tomato Sauce', FALSE, TRUE, TRUE, TRUE);

INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (5, 'Steak', FALSE, FALSE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (5, 'Mashed Potatoes', FALSE, TRUE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (5, 'Butter', TRUE, TRUE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (5, 'Salt', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (5, 'Pepper', FALSE, TRUE, TRUE, TRUE);

INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Sushi Rice', FALSE, TRUE, TRUE, FALSE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Nori', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Tuna', FALSE, FALSE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Salmon', FALSE, FALSE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Avocado', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Wasabi', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Soy Sauce', FALSE, TRUE, TRUE, TRUE);


Using the INGREDIENT and MEAL tables, write a query to return the name of all meals that contain garlic.

       select m.NAME from meal m  inner join ingredient i on i.MEAL_ID = m.MEAL_ID where i.NAME = "garlic"

Using the INGREDIENT and MEAL tables, write a query to return the number of meals with vegetarian ingredients.


      select count(i.NAME)  from meal m  inner join ingredient i on i.MEAL_ID = m.MEAL_ID where  i.VEGETARIAN  is true;

Using the INGREDIENT and MEAL tables, write a query to return the names of meals that have at least 1 gluten free
ingredient and at least 1 vegan ingredient.

        select m.NAME  from meal m  inner join ingredient i on i.MEAL_ID = m.MEAL_ID where  i.VEGAN and i.VEGAN ;


Using the INGREDIENT and MEAL tables, write a query to return the average number of ingredients per meal.

         SELECT AVG(ingredient_count) AS average_ingredients
FROM ( SELECT meal_id, COUNT(*) AS ingredient_count FROM ingredient GROUP BY meal_id) AS ingredient_counts;

Using the INGREDIENT and MEAL tables, write a query to return the names of meals that have more than 3 ingredients.

       SELECT M.NAME
FROM MEAL M
INNER JOIN (
    SELECT MEAL_ID, COUNT(*) AS INGREDIENT_COUNT
    FROM INGREDIENT
    GROUP BY MEAL_ID
) AS I ON i.MEAL_ID = m.MEAL_ID
WHERE I.INGREDIENT_COUNT > 3;

We do not have data for the tables below, please just write the SQL you d need to make the following joins!

Using the following table definitions, write an inner join for the two tables
CREATE TABLE CUSTOMER (
    CUSTOMER_ID INT,
    NAME VARCHAR(255),
    ADDRESS VARCHAR(255)
);
CREATE TABLE ORDERs (
    ORDER_ID INT,
    CUSTOMER_ID INT,
    ORDER_DATE DATE,
    TOTAL_COST DECIMAL(10,2)

);
            SELECT *
FROM CUSTOMER
INNER JOIN ORDERs ON CUSTOMER.CUSTOMER_ID = ORDERs.CUSTOMER_ID;




Using the following table definitions, write an inner join for the two tables
CREATE TABLE PRODUCT (
    PRODUCT_ID INT,
    NAME VARCHAR(255),
    PRICE DECIMAL(10,2)
);
CREATE TABLE INVENTORY (
    PRODUCT_ID INT,
    STORE_ID INT,
    QUANTITY INT
);


SELECT *
FROM PRODUCT
INNER JOIN INVENTORY ON PRODUCT.PRODUCT_ID = INVENTORY.PRODUCT_ID;